#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <windows.h>
#include <malloc.h> // Виділення пам'яті динамічного масива
#include <math.h>

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int* A;

    int min, i, k, tmp, h = 0;
    printf("Введіть кількість елементів множини А:\n");
    scanf_s("%d", &min);

    A = (int*)malloc(min * sizeof(int));

    if (min < 0) // Перевірка на від'ємні значення
    {
        printf("Неправильно задана кількість min елементів множини A (min не може бути меньше 0)");
        return -1;
    }

    for (i = 0; i < min; i++) // Введення елементів множини A
    {
        printf("A[%d]: ", i + 1);
        scanf_s("%d", &A[i]);
    }

    for (i = 0; i < min; i++) // Впорядкування елементів множини A
    {
        for (k = i + 1; k < min; k++)
        {
            if (A[i] > A[k])
            {
                tmp = A[i];
                A[i] = A[k];
                A[k] = tmp;
            }
        }
    }

    printf("\n-----------------------------------------------------\n\n");
    printf("Множина А = {"); // Вивід множини A
    for (i = 0; i < min; i++)
    {
        printf(" %d", A[i]);

    }
    printf("}\n");
    printf("\n-----------------------------------------------------\n\n");
    printf("L - Довільна підмножина; бінарне відношення на множині А\nВпорядковані елементи знаходяться x,y Є А знаходяться у відношенні між собою, коли (x,y) Є L\n");
    printf("\n-----------------------------------------------------\n\n");
    printf("Пари елементів для дослідження заданого відношення: \n\n");
    

    int t = 0; 
    
    for (i = 0; i < min; i++) { // Вивід пар елементів 
        for (int u = t + 0; u < min; ++u) {
            printf("(%d;%d)", A[i], A[u]);
            h++;
        }
    }

    printf("\nКількість пар елементів: %d\n", h);

    if (h <= pow(min, 3 / 2)) 
    {
        printf("Не виконується умова кількості пар елементів h < min(кількість елементів множини)^3/2");
    }
    else 
    {
        printf("Виконується умова кількість пар елементів h > min(кількість елементів множини)^3/2\n");
        printf("\n\n-----------------------------------------------------\n\n");
        printf("Дослідження відношення на рефлективність, симетричність та транзитивність\n");
        printf("\n-----------------------------------------------------\n\n");
        printf("Рефлективність: \n\n");

        for (i = 0; i < min; i++) {
            for (int u = t + 0; u < min; ++u) {
                if (A[i] == A[u]) {

                    printf("(%d;%d) \t", A[i], A[u]);
                }
                else {
                    continue;
                }
            }
        }
        printf("\n\n-----------------------------------------------------\n\n");
        printf("Антирефлективність відсутня\n");
        printf("\n-----------------------------------------------------\n");
        printf("\nСиметричність: \n\n");

        for (i = 0; i < min; i++) {
            for (int u = i + 1; u < min; ++u) {
                if (A[i] != A[u]) {
                    printf("(%d;%d) і (%d;%d)\n", A[i], A[u], A[u], A[i]);
                }
            }
        }
        printf("\n-----------------------------------------------------\n\n");
        printf("Антисиметрія відсутня\n");
        printf("\n-----------------------------------------------------\n");
        printf("\nТранзитивність: \n\n");

        for (i = 0; i < min; i++) {
            for (int u = 0; u < min; ++u) {
                for (int h = 0; h < min; ++h) {
                    if (A[i] != A[u] && A[u] != A[h] && A[i] != A[h]) {
                        printf("(%d;%d) і (%d;%d), то (%d;%d)\n", A[i], A[u], A[u], A[h], A[i], A[h]);
                    }
                }
            }
        }
    }
 
    return 0;
}